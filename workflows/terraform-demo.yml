name: terraform-demo
on: [push]

jobs:
  terraform_install:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    - name: Terraform security scan
      uses: triat/terraform-security-scan@v3.0.0

    - name: Install Terraform
      env:
        TERRAFORM_VERSION: "1.0.1"
      run: |
        tf_version=$TERRAFORM_VERSION
        wget https://releases.hashicorp.com/terraform/"$tf_version"/terraform_"$tf_version"_linux_amd64.zip
        unzip terraform_"$tf_version"_linux_amd64.zip
        sudo mv terraform /usr/local/bin/

    - name: Verify Terraform version
      run: terraform --version 

    - name: Terraform init
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: terraform init -input=false
    
    - name: Set environment variables
      run: |
          echo "GIT_SHA=${GITHUB_SHA}" >> $GITHUB_ENV
          echo "GIT_BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV
    
    - name: Use environment variables
      run: |
          echo "GIT_SHA=${GIT_SHA}"
          echo "GIT_BRANCH=${GIT_BRANCH}"

    - name: Create Terraform Workspace
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: terraform workspace new $GIT_BRANCH || true
    
    - name: Select Terraform Workspace
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: terraform workspace select $GIT_BRANCH   

    #En caso de querer agregar un plan
    # - name: Terraform validation
    #   run: terraform validate

    - name: Terraform apply
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #if: github.ref == 'refs/heads/main'    
      #cambiar main por el branch
      run: terraform destroy -auto-approve -input=false    
            

   